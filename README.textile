h1. Editable  

"!https://codeclimate.com/github/cmaujean/editable.png!":https://codeclimate.com/github/cmaujean/editable

Associate a set of possible editors/markup language processors with a field or fields on a model. A helper 
is provided for displaying the proper editor or a plain textarea (for markup languages).

h2. Usage

Gemfile
<pre><code>
  gem 'editable'
</code></pre>

Rake:
<pre><code>
  rake editable_engine:install:migrations
  rake db:migrate
</code></pre>

Model:
<pre><code>
  class BlogPost < ActiveRecord::Base
    acts_as_editable :body, :processor => :textile
  end
</code></pre>

View:
<pre><code>
  <%= form_for @post do |f| %>
    ...
    <%= raw editor(@post, :body, {:cols => 60, :rows => 20}) %>
    ...
  <% end %>
</code></pre>


h2. acts_as_editable(:field, :processor => :processor_name)

h3. :field

This is the field to attach the editor (and source processing)

h3. Options

h2. editor(instance, :field, {option => value})

This creates a text box and attaches any associated javascript necessary for the current editor type for that field.

h3. instance

This is an instance of ActiveRecord::Base that has acts_as_editable field(s)

h3. :field

This is the field the editor is for.

h3. Options

Options are turned into attributes on the created textarea

h2. Current Editors/processors support

# Reverse - bare textarea, simple processor that reverses the string. used for the tests
# Textile - bare textarea, simple RedCloth processing of textile input. 

h2. issues/bugs/todo

# Need more tests
# Needs editor switching
# Needs more processors/editors integrated
# Needs better handling of multiple acts_as_editable fields, need to assign a processor to each field, rather than
keeping a single processor for the entire model.
# We should be able to get a syntax aware textarea running for markdown/textile.

Submit other bugs, suggestions, feature requests, criticisms, kudos, etc to "Issues":https://github.com/azimuth/editable/issues
